(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{134:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"rightToc",(function(){return p})),a.d(t,"metadata",(function(){return s})),a.d(t,"default",(function(){return i}));var n=a(1),r=a(9),c=(a(0),a(143)),o={id:"router-match-rules",title:"router match rules"},p=[{value:"Custom Regexp in params",id:"custom-regexp-in-params",children:[]},{value:"Repeatable params",id:"repeatable-params",children:[]},{value:"Optional parameters",id:"optional-parameters",children:[]},{value:"Catch all / 404 Not found Route",id:"catch-all--404-not-found-route",children:[{value:"different between math all",id:"different-between-math-all",children:[]}]},{value:"Debugging",id:"debugging",children:[]}],s={id:"pre6-feature/router-match-rules",title:"router match rules",description:"# New dynamic Route Matching rules",source:"@site/../docs/pre6-feature/router-match-rules.md",permalink:"/shuvijs.org/docs/pre6-feature/router-match-rules",editUrl:"https://github.com/shuvijs/shuvijs.org/tree/master/website/../docs/pre6-feature/router-match-rules.md",sidebar:"docs",previous:{title:"dynamic routes",permalink:"/shuvijs.org/docs/pre6-feature/dynamic-routes"}},l={rightToc:p,metadata:s},b="wrapper";function i(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(c.b)(b,Object(n.a)({},l,a,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h1",{id:"new-dynamic-route-matching-rules"},"New dynamic Route Matching rules"),Object(c.b)("ol",null,Object(c.b)("li",{parentName:"ol"},"A ",Object(c.b)("em",{parentName:"li"},"param")," is denoted by a colon ",Object(c.b)("inlineCode",{parentName:"li"},":"),"  "),Object(c.b)("li",{parentName:"ol"},"colon ",Object(c.b)("inlineCode",{parentName:"li"},":")," is ",Object(c.b)("strong",{parentName:"li"},"necessary")," for ",Object(c.b)("em",{parentName:"li"},"param"))),Object(c.b)("p",null,"When a route is matched, the value of its ",Object(c.b)("em",{parentName:"p"},"params")," will be exposed as ",Object(c.b)("inlineCode",{parentName:"p"},"params"),". "),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const User = {\n  template: '<div>User {{ $route.params.id }}</div>',\n}\n// these are passed to `createRouter`\nconst routes = [\n  // dynamic segments start with a colon\n  { path: '/users/:id', component: User },\n]\n")),Object(c.b)("p",null,"You can have multiple ",Object(c.b)("em",{parentName:"p"},"params")," in the same route, and they will map to corresponding fields on ",Object(c.b)("inlineCode",{parentName:"p"},"params"),". Examples:"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"pattern"),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"matched path"),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"params"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"/users/:username"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"/users/eduardo"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"{ username: 'eduardo' }"))),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"/users/:username/posts/:postId"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"/users/eduardo/posts/123"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"{ username: 'eduardo', postId: '123' }"))))),Object(c.b)("h2",{id:"custom-regexp-in-params"},"Custom Regexp in params"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),"const routes = [\n  // /:productName -> matches /o,/p\n  { path: '/:productName' },\n]\n")),Object(c.b)("p",null,"In some scenarios we don't want to add that static section ",Object(c.b)("inlineCode",{parentName:"p"},"/o"),"/",Object(c.b)("inlineCode",{parentName:"p"},"p"),". However, ",Object(c.b)("inlineCode",{parentName:"p"},"orderId")," is always a number while ",Object(c.b)("inlineCode",{parentName:"p"},"productName")," can be anything, so we can specify a custom regexp for a param in parentheses:"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const routes = [\n  // /:orderId -> matches only numbers\n  { path: '/:orderId(\\\\d+)' },\n  // /:productName -> matches anything else\n  { path: '/:productName' },\n]\n")),Object(c.b)("p",null,"Now, going to ",Object(c.b)("inlineCode",{parentName:"p"},"/25")," will match ",Object(c.b)("inlineCode",{parentName:"p"},"/:orderId")," while going to anything else will match ",Object(c.b)("inlineCode",{parentName:"p"},"/:productName"),". The order of the ",Object(c.b)("inlineCode",{parentName:"p"},"routes")," array doesn't even matter!"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"Make sure to ",Object(c.b)("strong",{parentName:"p"},"escape backslashes (","\\",")")," like we did with ",Object(c.b)("inlineCode",{parentName:"p"},"\\d")," (becomes ",Object(c.b)("inlineCode",{parentName:"p"},"\\\\d"),") to actually pass the backslash character in a string in JavaScript.")),Object(c.b)("h2",{id:"repeatable-params"},"Repeatable params"),Object(c.b)("p",null,"If you need to match routes with multiple sections like ",Object(c.b)("inlineCode",{parentName:"p"},"/first/second/third"),", you should mark a param as repeatable with ",Object(c.b)("inlineCode",{parentName:"p"},"*")," (0 or more) and ",Object(c.b)("inlineCode",{parentName:"p"},"+")," (1 or more):"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const routes = [\n  // /:chapters -> matches /one, /one/two, /one/two/three, etc\n  { path: '/:chapters+' },\n  // /:chapters -> matches /, /one, /one/two, /one/two/three, etc\n  { path: '/:chapters*' },\n]\n")),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"// given { path: '/:chapters*', name: 'chapters' },\nrouter.resolve({ name: 'chapters', params: { chapters: [] } }).href\n// produces /\nrouter.resolve({ name: 'chapters', params: { chapters: ['a', 'b'] } }).href\n// produces /a/b\n\n// given { path: '/:chapters+', name: 'chapters' },\nrouter.resolve({ name: 'chapters', params: { chapters: [] } }).href\n// throws an Error because `chapters` is empty\n")),Object(c.b)("p",null,"These can also be combined with custom Regexp by adding them ",Object(c.b)("strong",{parentName:"p"},"after the closing parentheses"),":"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const routes = [\n  // only match numbers\n  // matches /1, /1/2, etc\n  { path: '/:chapters(\\\\d+)+' },\n  // matches /, /1, /1/2, etc\n  { path: '/:chapters(\\\\d+)*' },\n]\n")),Object(c.b)("h2",{id:"optional-parameters"},"Optional parameters"),Object(c.b)("p",null,"You can also mark a parameter as optional by using the ",Object(c.b)("inlineCode",{parentName:"p"},"?")," modifier (0 or 1):"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const routes = [\n  // will match /users and /users/posva\n  { path: '/users/:userId?' },\n  // will match /users and /users/42\n  { path: '/users/:userId(\\\\d+)?' },\n]\n")),Object(c.b)("p",null,"Note that ",Object(c.b)("inlineCode",{parentName:"p"},"*")," technically also marks a parameter as optional but ",Object(c.b)("inlineCode",{parentName:"p"},"?")," parameters cannot be repeated."),Object(c.b)("h2",{id:"catch-all--404-not-found-route"},"Catch all / 404 Not found Route"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const routes = [\n  // will match everything and put it under `$route.params._other`\n  { path: '/:_other(.*)', name: 'NotFound', component: NotFound },\n  // will match anything starting with `/user-` and put it under `$route.params.afterUser`\n  { path: '/user-:afterUser(.*)', component: UserGeneric },\n]\n")),Object(c.b)("h3",{id:"different-between-math-all"},"different between math all"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"pattern"),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"matched path"),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"$route.params"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"/:chapters*"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"/one"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"{ chapters: ['one'] }"))),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"/:chapters(.*)"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"/one"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"{ chapters: 'one' }"))))),Object(c.b)("p",null,"This will give you an array of params instead of a string and will also require you to pass an array when using named routes:"),Object(c.b)("h2",{id:"debugging"},"Debugging"),Object(c.b)("p",null,"If you need to dig how your routes are transformed into Regexp to understand why a route isn't being matched or, to report a bug, you can use the ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"https://paths.esm.dev/?p=AAMeJSyAwR4UbFDAFxAcAGAIJXMAAA..#"}),"path ranker tool"),". It supports sharing your routes through the URL."))}i.isMDXComponent=!0},143:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return i}));var n=a(0),r=a.n(n),c=r.a.createContext({}),o=function(e){var t=r.a.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):Object.assign({},t,e)),a},p=function(e){var t=o(e.components);return r.a.createElement(c.Provider,{value:t},e.children)};var s="mdxType",l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},b=Object(n.forwardRef)((function(e,t){var a=e.components,n=e.mdxType,c=e.originalType,p=e.parentName,s=function(e,t){var a={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&-1===t.indexOf(n)&&(a[n]=e[n]);return a}(e,["components","mdxType","originalType","parentName"]),b=o(a),i=n,u=b[p+"."+i]||b[i]||l[i]||c;return a?r.a.createElement(u,Object.assign({},{ref:t},s,{components:a})):r.a.createElement(u,Object.assign({},{ref:t},s))}));function i(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var c=a.length,o=new Array(c);o[0]=b;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[s]="string"==typeof e?e:n,o[1]=p;for(var i=2;i<c;i++)o[i]=a[i];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,a)}b.displayName="MDXCreateElement"}}]);