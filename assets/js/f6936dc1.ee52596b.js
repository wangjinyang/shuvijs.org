"use strict";(self.webpackChunkshuvi_document=self.webpackChunkshuvi_document||[]).push([[271],{9613:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(9496);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=p(n),m=a,f=d["".concat(l,".").concat(m)]||d[m]||c[m]||i;return n?r.createElement(f,o(o({ref:t},u),{},{components:n})):r.createElement(f,o({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8654:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return c}});var r=n(7813),a=n(7044),i=(n(9496),n(9613)),o=["components"],s={id:"public-path",title:"public path"},l="API Routes",p={unversionedId:"guide/features/public-path",id:"guide/features/public-path",title:"public path",description:"For an API route to work, you need to export a function as default (a.k.a request handler), which then receives the following parameters:",source:"@site/docs/guide/features/public-path.md",sourceDirName:"guide/features",slug:"/guide/features/public-path",permalink:"/shuvijs.org/docs/guide/features/public-path",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/guide/features/public-path.md",tags:[],version:"current",frontMatter:{id:"public-path",title:"public path"},sidebar:"guideSidebar",previous:{title:"public dir",permalink:"/shuvijs.org/docs/guide/features/public-dir"},next:{title:"router match rules",permalink:"/shuvijs.org/docs/guide/features/router-match-rules"}},u={},c=[{value:"Custom config",id:"custom-config",level:2}],d={toc:c};function m(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"api-routes"},"API Routes"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"export default function handler(req, res) {\n  res.status(200).json({ name: 'John Doe' })\n}\n")),(0,i.kt)("p",null,"For an API route to work, you need to export a function as default (a.k.a ",(0,i.kt)("strong",{parentName:"p"},"request handler"),"), which then receives the following parameters:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"req"),": An instance of ",(0,i.kt)("a",{parentName:"li",href:"https://nodejs.org/api/http.html#http_class_http_incomingmessage"},"http.IncomingMessage"),", plus some ",(0,i.kt)("a",{parentName:"li",href:"#enhanced-request"},"enhanced request")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"res"),": An instance of ",(0,i.kt)("a",{parentName:"li",href:"https://nodejs.org/api/http.html#http_class_http_serverresponse"},"http.ServerResponse"),", plus some ",(0,i.kt)("a",{parentName:"li",href:"#enhanced-response"},"enhanced response"))),(0,i.kt)("p",null,"To handle different HTTP methods in an API route, you can use ",(0,i.kt)("inlineCode",{parentName:"p"},"req.method")," in your request handler, like so:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"export default function handler(req, res) {\n  if (req.method === 'POST') {\n    // Process a POST request\n  } else {\n    // Handle any other HTTP method\n  }\n}\n")),(0,i.kt)("p",null,"To fetch API endpoints, take a look into any of the examples at the start of this section."),(0,i.kt)("h1",{id:"enhanced-request"},"enhanced request"),(0,i.kt)("p",null,"API routes provide built in middlewares which parse the incoming request (",(0,i.kt)("inlineCode",{parentName:"p"},"req"),"). Those middlewares are:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"req.cookies")," - An object containing the cookies sent by the request. Defaults to ",(0,i.kt)("inlineCode",{parentName:"li"},"{}")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"req.query")," - An object containing the ",(0,i.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Query_string"},"query string"),". Defaults to ",(0,i.kt)("inlineCode",{parentName:"li"},"{}")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"req.body")," - An object containing the body parsed by ",(0,i.kt)("inlineCode",{parentName:"li"},"content-type"),", or ",(0,i.kt)("inlineCode",{parentName:"li"},"null")," if no body was sent")),(0,i.kt)("h2",{id:"custom-config"},"Custom config"),(0,i.kt)("p",null,"Every API route can export a ",(0,i.kt)("inlineCode",{parentName:"p"},"config")," object to change the default configs, which are the following:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"export const config = {\n  apiConfig: {\n    bodyParser: {\n      sizeLimit: '1mb',\n    },\n  },\n}\n")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"api")," object includes all configs available for API routes."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"bodyParser")," Enables body parsing, you can disable it if you want to consume it as a ",(0,i.kt)("inlineCode",{parentName:"p"},"Stream"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"export const config = {\n  apiConfig: {\n    bodyParser: false,\n  },\n}\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"bodyParser.sizeLimit")," is the maximum size allowed for the parsed body, in any format supported by ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/visionmedia/bytes.js"},"bytes"),", like so:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"export const config = {\n  apiConfig: {\n    bodyParser: {\n      sizeLimit: '500kb',\n    },\n  },\n}\n")),(0,i.kt)("h1",{id:"enhanced-response"},"enhanced response"),(0,i.kt)("p",null,"The response (",(0,i.kt)("inlineCode",{parentName:"p"},"res"),") includes a set of Express.js-like methods to improve the developer experience and increase the speed of creating new API endpoints, take a look at the following example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"export default function handler(req, res) {\n  res.status(200).json({ name: 'shuvi' })\n}\n")),(0,i.kt)("p",null,"The included helpers are:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"res.status(code)")," - A function to set the status code. ",(0,i.kt)("inlineCode",{parentName:"li"},"code")," must be a valid ",(0,i.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/List_of_HTTP_status_codes"},"HTTP status code")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"res.json(body)")," - Sends a JSON response. ",(0,i.kt)("inlineCode",{parentName:"li"},"body")," must be a ",(0,i.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Glossary/Serialization"},"serialiazable object")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"res.send(body)")," - Sends the HTTP response. ",(0,i.kt)("inlineCode",{parentName:"li"},"body")," can be a ",(0,i.kt)("inlineCode",{parentName:"li"},"string"),", an ",(0,i.kt)("inlineCode",{parentName:"li"},"object")," or a ",(0,i.kt)("inlineCode",{parentName:"li"},"Buffer")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"res.redirect([status,] path)")," - Redirects to a specified path or URL. ",(0,i.kt)("inlineCode",{parentName:"li"},"status")," must be a valid ",(0,i.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/List_of_HTTP_status_codes"},"HTTP status code"),". If not specified, ",(0,i.kt)("inlineCode",{parentName:"li"},"status"),' defaults to "307" "Temporary redirect".')))}m.isMDXComponent=!0}}]);